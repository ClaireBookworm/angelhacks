rules_version = '2'

service cloud.firestore {
	match /databases/{database}/documents {
		match /users/{uid} {
			allow read: if signedIn()
			allow write: if signedInWith(uid)
			match /name {
				allow read
				allow create, update: if signedInWith(uid) && isValidString(newData())
				allow delete: if false
			}
			match /email {
				allow read: if signedInWith(uid)
				allow create, update: if signedInWith(uid) && checkEmail(newData())
				allow delete: if false
			}
			match /school {
				allow create, update: if signedInWith(uid) && isValidString(newData())
				allow delete: if false
			}
			match /comments {
				allow read, delete: if signedInWith(uid)
				allow create, update: if signedInWith(uid) && isValidString(newData())
			}
		}

		function authId() {
			return request.auth.uid
		}

		function signedIn() {
			return request.auth != null
		}

		function signedInWith(uid) {
			return signedIn() && authId() == uid
		}

		function oldData() {
			return resource.data
		}

		function newData() {
			return request.resource.data
		}

		function isValidString(data) {
			return (data is string) && data != ''
		}

		function checkEmail(data) {
			return isValidString(data) && isEmailUnique(data)
		}

		function isEmailUnique(email) {
			return !exists(/databases/$(database)/documents/users/{allUsers=**}/email/$(email))
		}
	}
}